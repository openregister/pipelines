worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 1024; }


http {
  charset utf-8;
  log_format cloudfoundry 'NginxLog "$request" $status $body_bytes_sent';
  access_log /dev/stdout cloudfoundry;

  default_type application/json;
  include mime.types;

  sendfile on;
  tcp_nopush on;
  keepalive_timeout 30;

  # Ensure that redirects don't include the internal container PORT - 8080
  port_in_redirect off; 

  map $http_accept $format {
    default json;
    text/csv csv;
    "text/csv; charset=UTF-8" csv;
    application/json json;
  }

  map $host $register_name {
    ~^(?<reg>.+)-reg\..+$ $reg;
  }

  lua_package_path "$prefix/lua/?.lua;/home/vcap/deps/0/nginx/lualib/?.lua;/usr/local/openresty/nginx/lua/?.lua;;";
  lua_package_cpath "/home/vcap/deps/0/nginx/lualib/?.so;;";

  server {
    absolute_redirect off;
    listen {{ port }};
    default_type application/json;

    root public/$register_name;
    index openapi.json;

    more_set_headers "Server: registers/0.1";

    expires 0;
    add_header Cache-Control "no-cache";
    add_header X-Register $register_name;

    # Remove trailing slashes ##################################################

    rewrite ^/(?<path>.*)/$ /$path permanent;


    # Errors ###################################################################

    location @not_found {
      access_by_lua_block {
        local utils = require("utils")
        local errors = require("errors")

        utils.ngx_error(errors.not_found())
      }
    }

    location @internal_server_error {
      access_by_lua_block {
        local utils = require("utils")
        local errors = require("errors")

        utils.ngx_error(errors.internal_server_error())
      }
    }

    error_page 404 @not_found;
    error_page 500 @internal_server_error;


    # Entries ##################################################################

    location = /entries.csv {
      default_type "text/csv; charset=UTF-8";

      if ($arg_start) {
        access_by_lua_block {
          require("utils").slice_csv()
        }
      }

      alias public/$register_name/entries/index.csv;
    }

    location = /entries.json {
      if ($arg_start) {
        access_by_lua_block {
          require("utils").slice_json()
        }
      }

      alias public/$register_name/entries/index.json;
    }

    location ~ ^/entries/(?<entry>\d+).csv$ {
      default_type "text/csv; charset=UTF-8";

      alias public/$register_name/entries/$entry.csv;
    }

    location /entries {
      rewrite ^/entries$ /entries.$format last;
      rewrite ^/entries/(?<entry>\d+)$ /entries/$entry.$format last;
    }


    # Records ##################################################################

    location @single_record {
      rewrite ^/records/(?<rec>.+)$ /records/$rec.$format last;
    }

    location = /records.csv {
      default_type "text/csv; charset=UTF-8";
      
      alias public/$register_name/records/index.csv;
    }

    location = /records.json {
      alias public/$register_name/records/index.json;
    }

    location ~ ^/records/(?<rec>.+).csv$ {
      default_type "text/csv; charset=UTF-8";

      alias public/$register_name/records/$rec.csv;
    }

    location /records {
      rewrite ^/records$ /records.$format last;

      try_files $uri @single_record;
    }


    # Items ####################################################################

    location @single_item {
      rewrite ^/items/(?<itm>.+)$ /items/$itm.$format last;
    }

    location = /items.csv {
      default_type "text/csv; charset=UTF-8";

      alias public/$register_name/items/index.csv;
    }

    location = /items.json {
      alias public/$register_name/items/index.json;
    }

    location ~ ^/items/(?<itm>.+).csv$ {
      default_type "text/csv; charset=UTF-8";

      alias public/$register_name/items/$itm.csv;
    }

    location /items {
      rewrite ^/items$ /items.$format last;

      try_files $uri @single_item;
    }


    # Register #################################################################

    location = /register {
      alias public/$register_name/register.json;
    }


    # Archive ##################################################################

    location = /download-register {
      default_type application/octet-stream;

      alias public/$register_name/archive.zip;
    }


    # RSF ######################################################################

    location /download-rsf {
      default_type application/uk-gov-rsf;

      rewrite ^/download-rsf$ /commands.rsf last;
    }

    location = /commands {
      default_type application/uk-gov-rsf;

      alias public/$register_name/commands.rsf;
    }


    # Legacy ###################################################################

    location / {
      rewrite ^/record/(?<idx>.*)$ /records/$idx permanent;
      rewrite ^/entry/(?<idx>.*)$ /entries/$idx permanent;
      rewrite ^/item/(?<idx>.*)$ /items/$idx permanent;
    }
  }
}
